$btn-ghost-color: $text-color;
$btn-ghost-bg: transparent;
$btn-ghost-border: $border-color-base;
@mixin btn-size($height, $padding-x, $padding-y, $font-size, $border-radius) {
  height: $height;
  padding: calc($padding-y * 0.4) calc($padding-x * 2.3);
  font-size: $font-size;
  border-radius: $border-radius;
}

@mixin btn-color($color, $background, $border) {
  color: $color;
  border-color: $border;

  @if $background {
    background: $background;
  }

  > a:only-child {
    color: currentColor;

    &::after {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      background: transparent;
      content: "";
    }
  }
}

@mixin btn-variabel($color, $background, $border) {
  @include btn-color($color, $background, $border);

  &:hover,
  &:focus,
  &:active {
    @include btn-color($color, $primary-2, $primary);
  }
}

@mixin btn-variabel-danger(
  $color,
  $background,
  $border,
  $hover-color,
  $hover-bg,
  $hover-border
) {
  @include btn-color($color, $background, $border);

  &:hover,
  &:focus,
  &:active {
    @include btn-color($hover-color, $hover-bg, $hover-border);
  }
}

@mixin btn() {
  position: relative;
  display: inline-block;
  font-weight: $font-weight-base;
  white-space: nowrap;
  text-align: center;
  border: $btn-border-width $btn-border-style transparent;
  box-shadow: $btn-box-shadow;
  cursor: pointer;
  transition: all 0.3s ease-in-out;
  user-select: none;
  touch-action: manipulation;
  outline: none;

  &:focus {
    outline: none;
  }

  @include btn-size(
    $btn-height-base,
    $btn-padding-x,
    $btn-padding-y,
    $font-size-base,
    $btn-border-radius
  );

  &-small {
    @include btn-size(
      $btn-height-sm,
      $btn-padding-x-sm,
      $btn-padding-y-sm,
      $btn-font-size-sm,
      $btn-border-radius-sm
    );
  }

  &-large {
    @include btn-size(
      $btn-height-lg,
      $btn-padding-x-lg,
      $btn-padding-y-lg,
      $btn-font-size-lg,
      $btn-border-radius-lg
    );
  }
}

@mixin btn-disabled(
  $color: $btn-disabled-color,
  $background: $btn-disabled-bg,
  $border: $btn-border-color
) {
  &[disabled] {
    cursor: not-allowed;
    &,
    &:hover,
    &:focus,
    &:active {
      @include btn-color($color, $background, $border);
      text-shadow: none;
      box-shadow: none;
    }
  }
}

@mixin btn-shape($shape) {
  @if $shape == circle {
    border-radius: 100%;
    width: 45px;
    height: 45px;
    display: inline-flex;
    align-items: center;
    padding: 0;
    justify-content: center;
  } @else if $shape == round {
    border-radius: 32px;
  }
}

@mixin btn-default {
  @include btn-variabel-other(
    $btn-default-color,
    $btn-default-bg,
    $btn-default-border
  );

  &-danger {
    @include btn-variabel-danger(
      $error-color,
      $btn-default-bg,
      $error-color,
      $error-color-hover,
      $btn-default-bg,
      $error-color-hover
    );
  }

  @include btn-disabled();
}

@mixin btn-primary() {
  @include btn-variabel(#fff, $primary, transparent);

  &-danger {
    @include btn-variabel-danger(
      #fff,
      $btn-danger-bg,
      $btn-danger-border,
      #fff,
      $error-color-hover,
      $error-color-hover
    );
  }

  @include btn-disabled();
}

@mixin btn-variabel-other($color, $background, $border) {
  @include btn-color($color, $background, $border);

  &:hover,
  &:focus {
    @include btn-color($primary, $background, $primary);
  }

  &:active {
    @include btn-color($primary-7, $background, $primary-7);
  }

  @include btn-disabled();
}

@mixin btn-ghost() {
  @include btn-variabel-other(#fff, $btn-ghost-bg, #fff);

  &-danger {
    @include btn-variabel-danger(
      $error-color,
      transparent,
      $btn-danger-border,
      $error-color-hover,
      transparent,
      $error-color-hover
    );
  }
}

@mixin btn-dashed() {
  @include btn-variabel-other(
    $btn-default-color,
    $btn-default-bg,
    $btn-default-border
  );
  border-style: dashed;

  &-danger {
    @include btn-variabel-danger(
      $error-color,
      transparent,
      $btn-danger-border,
      $error-color-hover,
      transparent,
      $error-color-hover
    );
  }
}

@mixin btn-link() {
  @include btn-variabel-other($link-color, transparent, transparent);
  box-shadow: none;

  &:hover {
    background: $btn-link-hover-bg;
    text-decoration: none;
  }

  &:hover,
  &:focus,
  &:active {
    border-color: transparent;
  }

  &-danger {
    @include btn-variabel-danger(
      $error-color,
      transparent,
      transparent,
      $error-color-hover,
      $btn-link-hover-bg,
      transparent
    );
  }

  &-disabled {
    cursor: not-allowed;
    &,
    &:hover,
    &:focus,
    &:active {
      @include btn-color($btn-disabled-color, transparent, $btn-danger-color);
      text-shadow: none;
      box-shadow: none;
    }
  }
}

@mixin btn-text() {
  @include btn-variabel-other($text-color, transparent, transparent);
  box-shadow: none;

  &:hover,
  &:focus {
    color: $text-color;
    background: $btn-text-hover-bg;
    border-color: transparent;
  }

  @include btn-disabled($disabled-color, transparent, transparent);
  &-danger {
    @include btn-variabel-danger(
      $error-color,
      transparent,
      transparent,
      $error-color-hover,
      $btn-text-hover-bg,
      transparent
    );
  }
}

@mixin btn-danger {
  @include btn-variabel($btn-danger-color, $btn-danger-bg, $btn-danger-border);
}
